
@{
    ViewBag.Title = "Index";
    ViewBag.Menu = "system-config";
    ViewBag.SubMenu = "system-config";
}

@section styles{
    <style>
        .select-asset {
            background-color: white;
            padding: 20px;
        }

            .select-asset .addProButton {
                width: 100px;
                padding: 5px 5px;
                background-color: #435ebe;
                color: white !important;
                border-radius: 5px;
                cursor: pointer;
            }

        .list-system-config {
            background-color: white;
            padding: 20px;
        }

        #list-config td a {
            padding-right: 10px;
            cursor: pointer;
        }

        .modal {
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            background: rgba(0,0,0,0.4);
            display: none;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .modal-container {
            background-color: #fff;
            width: 900px;
            max-width: calc(100% - 32px);
            position: relative;
            animation: modalFadeIn ease 0.5s;
        }

        .modal-header {
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: center !important;
            font-size: 20px;
            border-bottom: solid #ccc 0.5px;
            text-transform: uppercase;
        }

        .modal-body {
            width: 90%;
            margin: auto;
        }

        .modal-footer {
            width: 90%;
            margin: auto;
            justify-content: end;
            display: flex;
            gap: 10px;
            padding-bottom: 10px;
        }

            .modal-footer .update-btn {
                width: 100px;
                padding: 5px 5px;
                background-color: #8c237b;
                color: white;
                border-radius: 5px;
                cursor: pointer;
                border: solid #8c237b 1px;
            }

            .modal-footer .close-modal {
                width: 80px;
                color: black;
                border: solid #ccc 0.5px;
                cursor: pointer;
                border-radius: 5px;
            }

        @@keyframes modalFadeIn {
            from {
                opacity: 0;
                transform: translateY(200px);
            }

            to {
                transform: translateY(0px);
                opacity: 1;
            }
        }
    </style>
}
@*<div class="select-asset">
        <a class="addProButton" onclick="openCreateModal();" style="width:100px">Thêm thiết lập</a>
    </div>*@
<div class="list-system-config">
    <div class="table-responsive">
        <table class="table">
            <thead>
                <tr>
                    <th scope="col">Tên thiết lập</th>
                    <th scope="col" style="width:50%">Nội dung</th>
                    <th scope="col">Thao tác</th>
                </tr>
            </thead>
            <tbody id="list-config">
            </tbody>
        </table>
    </div>
</div>
<div id="modal" class="modal">
    <div class="modal-container">
        <div class="modal-header">Cập nhật thiết lập</div>
        <div class="modal-body">
            <div class="form-group">
                @*<label class="font-weight-semibold" for="configName">Tên thiết lập:</label>*@
                <h3 id="configName">duyyyyyyy</h3>
                @*<input type="text" class="form-control" id="configName" placeholder="Tên thiết lập" disabled>*@
            </div>

            <div class="form-group valueInput">
                @*<label class="font-weight-semibold" for="configVal">Nội dung:</label>*@
            </div>
            <input type="hidden" id="SystemConfigId" />
            <input type="hidden" id="ValueType" />
        </div>


        <div class="modal-footer">
            <button class="close-modal btn" onclick="closeModal()">Đóng</button>
            <button class="btn btn-primary" id="updateBank-btn">Lưu</button>

        </div>

    </div>

</div>
@section scripts{
    <script>

        var ChooseThumbnail = function (el) { $(el).siblings('input[type=file]').click(); }
        var ChooseThumbnail_OnChange = function (el) {
            let reader = new FileReader();
            reader.onloadend = function (e) {
                $(el).siblings('input[type=hidden]').val(e.currentTarget.result.substring(e.currentTarget.result.indexOf(',') + 1, e.currentTarget.result.length));
                $(el).siblings('.preview').css('background-image', `url(${e.currentTarget.result})`);
            }
            reader.readAsDataURL(el.files[0])
        }

        async function GetListSystemConfig() {
            let rq = await fetch(Enum.ApiUrl + '/api/AdminSystemConfig/GetListConfig' ,{
                method: 'get',
                headers: Enum.OptionAdminHeaderDefault
            });
            let rs = await rq.json();

            if (AdminCheckErrorResponse(rs) === false) return;
            $('#list-config').html('');
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                for (let index = 0; index < rs.data.length; index++) {
                    var x = rs.data[index];
                    let html = '<tr>';

                    html += '<td>' + x.Name + '</td> ';
                    html += '<td>' +GetObjectProperty(x,'Value',) + '</td>';
                    html += '<td>';
                    html += '<a data-type="' + x.ValueType +'" data-id="' + x.SystemConfigId +'" data-name="' + x.Name + '" data-value="' + x.Value + '" onclick="openUpdateModal(this);"><button class="btn btn-primary btn-xs"><i class="fa-solid fa-pen-to-square"></i></button></a>';
                    //html += '<a data-id="' + x.SystemConfigId + '" onclick="deleteBankAccount(this);"><button class="btn btn-danger btn-xs"><i class="fa fa-trash" aria-hidden="true"></i></button></a> </td> </tr>';

                    $('#list-config').append(html);
                }
            }
        }
        @*const openCreateModal = function () {
            $('#updateBank-btn').attr('onclick', 'createConfig()');
            $('#modal').css('display', 'flex');
        }*@

        const openUpdateModal = function (el) {
            let name = $(el).data('name');
            let value = $(el).data('value');
            let id = $(el).data('id');
            let type = $(el).data('type');

            if (type == 'IMAGE') {
                $('.valueInput').html('');
                $('.valueInput').append(`<div class="form-group">
            <div class="preview" style=" width: 200px; height: 200px; background-position: center; background-repeat: no-repeat; background-size: contain; border: .5px solid #d7d7d7; cursor: pointer; background-image: url('${value}');" onclick="ChooseThumbnail(this);"></div>
            <input type="file" style="display:none;" onchange="ChooseThumbnail_OnChange(this);" required />
            <input type="hidden" id="configVal" />
        </div>`);
            }
            if (type == 'NUMBER') {
                $('.valueInput').html('');
                $('.valueInput').append(`<input type="text" class="form-control" id="configVal" placeholder="Nội dung" onkeyup="ValidateInputOnlyNumber(event,this)" />`);
            }

            if (type == 'STRING') {
                $('.valueInput').html('');
                $('.valueInput').append(`<input type="text" class="form-control" id="configVal" placeholder="Nội dung" />`);
            }

            $('#ValueType').val(type);
            $('#configName').text(name);
            $('#configVal').val(value);
            $('#SystemConfigId').val(id);
            $('#updateBank-btn').attr('onclick', 'updateConfig()');

            $('#modal').css('display', 'flex');

        }

        const closeModal = function () {
            $('#modal').css('display', 'none');
            $('#configName').val('');
            $('#configVal').val('');
        }

        @*const createConfig = async function () {

            let model = {
                Name: $('#configName').val(),
                Value: $('#configVal').val()
            }

            let rq = await fetch(Enum.ApiUrl + '/api/AdminSystemConfig/InsertSystemConfig', {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rq.json();

            if (AdminCheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                    alert('Thêm thiết lập thành công');
                    window.location.reload();

            }
        }*@

        const updateConfig = async function () {
            let model = {
                SystemConfigId: $('#SystemConfigId').val(),
                Value: $('#configVal').val(),
                ValueType: $('#ValueType').val(),
            }

            let rq = await fetch(Enum.ApiUrl + '/api/AdminSystemConfig/UpdateConfig', {
                method: 'post',
                headers: Enum.OptionAdminHeaderDefault,
                body: JSON.stringify(model)
            });
            let rs = await rq.json();

            if (AdminCheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                alert('Cập nhật thiết lập thành công');
                window.location.reload();
            }
        }

        const initPage = async function () {
            await GetListSystemConfig();
        }
        initPage();
    </script>
}


