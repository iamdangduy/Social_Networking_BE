
@{
    Layout = "~/Areas/Admin/Views/Shared/_LayoutAuth.cshtml";
}


<h2 class="auth-title">Đăng nhập</h2>
<div class="form-group position-relative has-icon-left mb-4">
    <input type="text" class="form-control form-control-xl" id="userName" placeholder="Nhập tên đăng nhập">
    <div class="form-control-icon">
        <i class="bi bi-person"></i>
    </div>
</div>
<div class="form-group position-relative has-icon-left mb-4">
    <input type="password" class="form-control form-control-xl" id="password" placeholder="Mật khẩu" onkeyup="EnterLogin(event)">
    <div class="form-control-icon">
        <i class="bi bi-shield-lock"></i>
    </div>
    <i class="fa-eye fa-regular" id="togglePassword" style="cursor: pointer; z-index: 10; position: absolute; right: 0; top: 50%; transform: translateY(-50%);font-size:18px; margin-right: 10px; "></i>
</div>

<button class="btn btn-primary btn-block btn-lg shadow-lg mt-5" onclick="Login();">Đăng nhập</button>
@section scripts{
    <script>
        $(function () {
            $("#togglePassword").click(function () {
                $(this).toggleClass("fa-eye-slash fa-eye");
                var type = $(this).hasClass("fa-eye-slash") ? "text" : "password";
                $("#password").attr("type", type);
            });
        });
        const EnterLogin = function (e) {
            if (e.key === 'Enter' || e.charCode === 13) {
                Login();
            }
        }
        const Login = async function () {
            let model = {
                Account: $('#userName').val(),
                Password: $('#password').val()
            };

            if (GetObjectProperty(model, 'Account') === '') { alert('Tài khoản đăng nhập không được để trống'); return; }
            if (GetObjectProperty(model, 'Password') === '') { alert('Mật khẩu không được để trống'); return; }
            let rq = await fetch('/api/adminsystem/loginpost', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json',
                },
                body: JSON.stringify(model)
            })
            let rs = await rq.json();
            if (AdminCheckErrorResponse(rs) === false) {
                return;
            }

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                SetCookie('UserAdminToken', rs.data);
                window.location.href = '/admin';
            }
        }
    </script>
}