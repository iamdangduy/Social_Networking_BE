
@{
    ViewBag.Title = "Tổng quan";
    ViewBag.Menu = "dashboard";
}
@section styles {
    <style>
        section {
            flex-direction: column;
        }

        .preview-transaction-image {
            width: 120px;
            height: 120px;
            display: flex;
            border-radius: 10px;
            border: .5px solid #e5e5e5;
            background-position: center;
            background-size: cover;
            background-repeat: no-repeat;
        }

        .modal {
            position: fixed;
            top: 0;
            right: 0;
            left: 0;
            bottom: 0;
            background: rgba(0,0,0,0.4);
            display: none;
            align-items: center;
            justify-content: center;
            flex-direction: column;
        }

        .modal-container {
            background-color: #fff;
            width: 900px;
            max-width: calc(100% - 32px);
            position: relative;
            animation: modalFadeIn ease 0.5s;
            transition: top 0.4s, opacity 0.4s;
        }

        .modal-header {
            height: 70px;
            display: flex;
            align-items: center;
            justify-content: center !important;
            font-size: 20px;
            border-bottom: solid #ccc 0.5px;
            text-transform: uppercase;
        }

        .modal-body {
            width: 90%;
            margin: auto;
        }

            .modal-body .list-userbank {
                margin-top: 20px;
                font-size: 15px;
                max-height: 250px;
                overflow-y: scroll;
            }

            .modal-body .content-bank {
                color: #000;
            }

                .modal-body .content-bank > div {
                    display: flex;
                    align-items:center;
                }
                    .modal-body .content-bank > div .header {
                        width: 90px;
                        font-size: 14px;
                    }
                    .modal-body .content-bank > div .value {
                        flex: 1;
                        text-align: right;
                        color: #f52222;
                    }

                    .modal-body .list-userbank > div {
                        display: flex;
                        flex-direction: column;
                        gap: 15px;
                        height: max-content;
                    }

            .modal-body .list-userbank .item-userbank {
            }

                .modal-body .list-userbank .item-userbank .QR-Image .text-value .image {
                }

                .modal-body .list-userbank .item-userbank > div {
                    display: flex;
                }

                    .modal-body .list-userbank .item-userbank > div .header {
                        flex: 1;
                        font-weight: 600;
                        color: #000;
                    }

                    .modal-body .list-userbank .item-userbank > div .text-value {
                        flex: 1;
                    }

        .modal-footer {
            width: 90%;
            margin: auto;
            justify-content: end;
            display: flex;
            gap: 10px;
            padding-bottom: 10px;
        }

            .modal-footer .close-modal {
                width: 65px;
                color: black;
                border: solid #ccc 0.5px;
                cursor: pointer;
                border-radius: 5px;
            }

        @@keyframes modalFadeIn {
            from {
                opacity: 0;
                transform: translateY(-200px);
            }

            to {
                transform: translateY(0px);
                opacity: 1;
            }
        }
    </style>
}
<section class="home-page">
    <div class="section-header">Tổng quan</div>
    <div class="system-general-parameter">
        <div class="general-parameter-box">
            <div class="parameter-icon">
                <i class="fa-solid fa-dollar-sign" style="color:  #56a6d1; "></i>
            </div>
            <div class="parameter-info">
                <div class="parameter-value" id="userBalance"></div>
                <div class="parameter-description">Số dư</div>
            </div>
        </div>
        <div class="general-parameter-box">
            <div class="parameter-icon">
                <i class="fa-solid fa-file-circle-exclamation" style="color: #eeaa7a;"></i>
            </div>
            <div class="parameter-info">
                <div class="parameter-value">3</div>
                <div class="parameter-description">Nhiệm vụ chưa hoàn thành</div>
            </div>
        </div>
        <div class="general-parameter-box">
            <div class="parameter-icon">
                <i class="fa-solid fa-arrow-turn-up" style="color: #da7272;"></i>
            </div>
            <div class="parameter-info">
                <div class="parameter-value" id="amountGive"></div>
                <div class="parameter-description">Tổng đã cho</div>
            </div>
        </div>
        <div class="general-parameter-box">
            <div class="parameter-icon">
                <i class="fa-solid fa-arrow-turn-down" style="color: #39c261;"></i>
            </div>
            <div class="parameter-info">
                <div class="parameter-value" id="amountReceive"></div>
                <div class="parameter-description">Tổng đã nhận</div>
            </div>
        </div>
    </div>
    <div class="current-mission">
        <div class="mission-label"> NHIỆM VỤ HIỆN TẠI </div>
        <div class="list-mission">

        </div>

    </div>

    <div class="confirm-give-list">
        <div class="confirm-give-label"> DANH SÁCH NGƯỜI GỬI CẦN XÁC NHẬN</div>
        <div class="filter">
            <select class="form-control form-control-sm" name="status" onchange="GetListGive();">
                <option value="" selected>Tất cả</option>
                <option value="PENDING">Chưa gửi</option>
                <option value="SENT">Đã gửi</option>
                <option value="DONE">Đã xác nhận</option>
            </select>
        </div>
        <div class="list-give">
            <div class="user-give-detail">
                <div class="avatar">
                    <img />
                </div>
                <div class="name">
                    Nguyen van a
                </div>
                <div class="status">
                    <span class="btn-outline-success ">Chưa gửi</span>
                </div>
                <div class="action">
                    <button class="btn btn-sm btn-primary">Xác nhận</button>
                </div>
            </div>
        </div>
        <div class="paging">
            <button class="btn btn-sm btn-outline-primary" onclick="ListGive_PreviousPage(this);"><i class="fa-solid fa-chevron-left"></i></button>
            <div class="go-to-page">
                <input class="form-control form-control-sm" name="page" value="1" />
                <span>/</span>
                <span class="total-page"></span>
                <button class="btn btn-sm btn-outline-primary" onclick="GetListGive();"><i class="fa-solid fa-play"></i></button>
            </div>
            <button class="btn btn-sm btn-outline-primary" onclick="ListGive_NextPage(this);"><i class="fa-solid fa-chevron-right"></i></button>
        </div>
    </div>

    <div class="recent-transactions">
        <div class="transactions-label"> Giao dịch gần đây </div>
        <div class="transactions-detail">
            <div class="content">
                <div class="content-detail">Bạn đã nhận 1,000,000 VNĐ từ Nguyễn Triệu Phú</div>
                <div class="content-time">10/04/2023 12:30:22</div>
            </div>
            <div class="money">
                1,000,000 VNĐ
            </div>
        </div>
        <div class="transactions-detail">
            <div class="content">
                <div class="content-detail">Bạn đã nhận 1,000,000 VNĐ từ Nguyễn Triệu Phú</div>
                <div class="content-time">10/04/2023 12:30:22</div>
            </div>
            <div class="money">
                1,000,000 VNĐ
            </div>
        </div>
        <div class="more"> <a href="#">Xem thêm</a></div>
    </div>
</section>

<div class="modal-custom" id="confirm-sent" style="display:none;">
    <div class="modal-custom-backdrop"></div>
    <div class="modal-custom-form">
        <div class="modal-custom-form-header">
            <div>XÁC NHẬN ĐÃ CHUYỂN</div>
        </div>
        <div class="modal-custom-form-body">
            <input type="hidden" name="queue-quest-give-id" value="" />
            <div>
                <div>Ảnh giao dịch</div>
                <div>
                    <input type="file" style="display:none;" onchange="TransactionImage_OnChange(this);" />
                    <input type="hidden" value="" name="transaction-image" />
                    <div class="preview-transaction-image" onclick="TransactionImage_OpenFileDialog(this);"></div>
                </div>
            </div>
        </div>
        <div class="modal-custom-form-footer">
            <div style="display:flex;gap:10px;justify-content:flex-end;">
                <button class="btn btn-outline-secondary btn-sm" onclick="CloseModel">Đóng</button>
                <button class="btn btn-outline-success btn-sm" onclick="ConfirmSent(this);">Xác nhận</button>
            </div>
        </div>
    </div>
</div>

<div class="modal-custom" id="transaction-detail" style="display:none;">
    <div class="modal-custom-backdrop"></div>
    <div class="modal-custom-form">
        <div class="modal-custom-form-header">
            <div>XÁC NHẬN ĐÃ CHUYỂN</div>
        </div>
        <div class="modal-custom-form-body">
            <input type="hidden" name="queue-quest-give-id" value="" />
            <div>
                <div>Ảnh giao dịch</div>
                <div>
                    <div class="preview-transaction-image" onclick="TransactionImage_OpenFileDialog(this);"></div>
                </div>
            </div>
        </div>
        <div class="modal-custom-form-footer">
            <div style="display:flex;gap:10px;justify-content:flex-end;">
                <button class="btn btn-outline-secondary btn-sm" onclick="CloseModel">Đóng</button>
                <button class="btn btn-outline-success btn-sm" onclick="ConfirmSent(this);">Xác nhận</button>
            </div>
        </div>
    </div>
</div>
<div id="modal" class="modal" onclick="closeModal()">
    <div class="modal-container">
        <div class="modal-header">Thông tin chuyển khoản</div>
        <div class="modal-body">
            <div class="content-bank">
                <div class="number-price">
                    <div class="header">
                        Số tiền
                    </div>
                    <div class="value" id="total-pay">
                    </div>
                </div>
                <div class="content">
                    <div class="header">
                        Nội dung chuyển khoản
                    </div>
                    <div class="value" id="content-pay">
                    </div>
                </div>
            </div>
            <div class="list-userbank">
                <div id="list-userbank">
                </div>
            </div>
        </div>
        <div class="modal-footer">
            <button class="btn btn-sm close-modal" onclick="closeModal()">Đóng</button>
        </div>

    </div>

</div>
@section scripts{
    <script>
        const TransferMoney = async function (el) {

            $(el).prop('disabled', true);
            try {
                let rq = await fetch(`/api/home/transfermoney?userGiveId=&userReceiverId=`)
            }
            catch (ex) { }
            $(el).prop('disabled', false);
        }

        const GetBalanceByUserId = async function () {
            const rp = await fetch('/api/UserWallet/GetBalanceByUserId', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rp.json();
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                $('#userBalance').html(NumberFormat(GetObjectProperty(rs, 'data',)));
            }
        }

        const GetTotalAmountReceive = async function () {
            const rp = await fetch('/api/UserProperties/GetTotalAmountReceive', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rp.json();
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                $('#amountReceive').html(NumberFormat(GetObjectProperty(rs, 'data',)));
            }
        }

        const GetTotalAmountGive = async function () {
            const rp = await fetch('/api/UserProperties/GetTotalAmountGive', {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            let rs = await rp.json();
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                $('#amountGive').html(NumberFormat(GetObjectProperty(rs, 'data',)));
            }
        }

        const InitPage = async function () {
            $(".modal-container").click(function (event) {
                event.stopPropagation();
            });
            const token = GetCookie('UserToken');
            if (token === '') window.location.href = '/gioi-thieu';
            GetBalanceByUserId();
            GetTotalAmountReceive();
            GetTotalAmountGive();
            GetUserQuest();
        }

        const GetUserQuest = async function () {
            const rq = await fetch(`/api/userquest/GetListQuest`, {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            const rs = await rq.json();

            if (GetObjectProperty(rs, 'status') == Enum.ResponseStatus.SUCCESS) {

                $('.current-mission .list-mission').html('');
                if (rs.data.listQueueGiveQuest.length <= 0) {
                    $('.current-mission .list-mission').append(`
<div class="mission-detail"><span>Bạn đang chưa có nhiệm vụ nào</span></div>
                                                    `);
                } else {
                    for (let i = 0; i < rs.data.listQueueGiveQuest.length; i++) {
                        const item = rs.data.listQueueGiveQuest[i];

                        let status = '';
                        let button = '';
                        switch (item.Status) {
                            case 'PENDING':
                                status = '<span class="btn btn-sm btn-outline-warning">Mới tạo</span>';
                                button = `<button class="btn btn-sm btn-primary"  onclick="OpenModalConfirmSent(this);" data-quest-id="${item.QueueGiveQuestId}">Đã chuyển</button>`;
                                break;
                            case 'SENT': status = '<span class="btn btn-sm btn-outline-info">Đã chuyển</span>'; break;
                            case 'DONE': status = '<span class="btn btn-sm btn-outline-success">Hoàn thành</span>'; break;
                            default: status = '<span class="btn btn-sm btn-outline-danger">Đã hủy</span>'; break;
                        }

                        $('.current-mission .list-mission').append(`
<div class="mission-detail" onclick="OpenBankInfo(this);" data-userid="${GetObjectProperty(item, 'UserId')}" data-id="${GetObjectProperty(item,'QueueGiveQuestId')}">
                        <div class="avatar-user" style="background-image:url(${GetObjectProperty(item, 'Avatar')})"></div>
<div class="name">${GetObjectProperty(item, 'Name')}</div>
<div class="amountgive">${NumberFormat(GetObjectProperty(item, 'AmountGive'))}<sup>đ</sup></div>
<div class="status">${status}</div>
<div class="button btn btn-sm">${button}</div>
</div>`);
                    }
                }
            }

        }



        const OpenModalConfirmSent = function (el) {
            const queuequestid = $(el).data('quest-id');
            $('#confirm-sent input[name=queue-quest-give-id]').val(queuequestid);
            $('#confirm-sent').css('display', 'flex');
        }

        const ConfirmSent = async function (el) {
            $(el).attr('disabled', true)
            try {
                let model = {
                    QueueGiveQuestId: $('#confirm-sent input[name=queue-quest-give-id]').val(),
                    TransactionImage: $('#confirm-sent input[name=transaction-image]').val(),
                };
                let errorCount = 0;
                if (GetObjectProperty(model, 'TransactionImage') === '') {
                    NotificationShow('Bạn cần chọn ảnh giao dịch');
                    errorCount++;
                }
                if (errorCount > 0) return;
                const rq = await fetch(`/api/userquest/ConfirmSent`, {
                    method: 'post',
                    headers: Enum.OptionHeaderDefault,
                    body: JSON.stringify(model)
                })
                const rs = await rq.json();
                if (!CheckErrorResponse(rs)) throw new Error();
                GetUserQuest();
                NotificationShow('Cập nhật nhiệm vụ thành công', 'success');
                $('#confirm-sent').css('display', 'none');
            }
            catch (ex) { }
            $(el).attr('disabled', false)


        }

        const TransactionImage_OpenFileDialog = function (el) {
            $(el).siblings('input[type=file]').click();
        }
        const TransactionImage_OnChange = function (el) {
            const reader = new FileReader();
            reader.onloadend = function (rs) {
                const base64DataPart = rs.target.result.split(';base64,');
                $(el).siblings('input[type=hidden]').val(base64DataPart[1]);
                $(el).siblings('.preview-transaction-image').css('background-image', `url(${rs.target.result})`);
            }

            reader.readAsDataURL(el.files[0]);
        }

        const ListGive_PreviousPage = function (el) {
            let page = $(el).closest('.paging').find('input[name=page]').val();
            if (page === '') page = '1';
            page = parseInt(page);
            if (page === 1) return;
            page--;
            $(el).closest('.paging').find('input[name=page]').val(page);
            GetListGive();
        }

        const ListGive_NextPage = function (el) {
            let page = $(el).closest('.paging').find('input[name=page]').val();
            let totalPage = $(el).closest('.paging').find('.total-page').text();
            totalPage = parseInt(totalPage);
            if (page === '') page = '1';
            page = parseInt(page);
            if (page === totalPage) return;
            page++;
            $(el).closest('.paging').find('input[name=page]').val(page);
            GetListGive();
        }
        const QuestDetail = async function (el) {
            const status = $(el).data('status');
            const questId = $(el).data('quest-id');


        }
        const GetListGive = async function () {
            const page = $('.confirm-give-list input[name=page]').val();
            const status = $('.confirm-give-list .filter select[name=status]').val();
            const rq = await fetch(`/api/userquest/GetListGive?page=${page}&Status=${status}`, {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });

            const rs = await rq.json();

            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {

                $('.confirm-give-list .total-page').text(GetObjectProperty(rs.data, 'totalPage'));
                $('.confirm-give-list .list-give').html('');
                if (rs.data.listData.length <= 0) {
                    $('.confirm-give-list .list-give').append(`<div class="user-give-detail">Chưa có người cần xác nhận</div>`);
                }
                for (let i = 0; i < rs.data.listData.length; i++) {
                    const item = rs.data.listData[i];

                    let status = '';
                    let button = '';
                    switch (item.Status) {
                        case 'PENDING': status = '<span class="btn-outline-warning ">Chưa gửi</span>'; break;
                        case 'SENT': status = '<span class="btn-outline-info ">Đã gửi</span>';
                            button = '<button class="btn btn-sm btn-primary">Xác nhận</button>';
                            break;
                        case 'DONE': status = '<span class="btn-outline-success ">Hoàn thành</span>'; break;
                        default: status = '<span class="btn-outline-danger ">Hoàn thành</span>'; break;
                    }

                    $('.confirm-give-list .list-give').append(`<div class="user-give-detail">
                                            <div class="avatar">
                                                <img src=" ${GetObjectProperty(item, 'Avatar')}"/>
                                            </div>
                                            <div class="name" onclick="QuestDetail(this);" data-status="${GetObjectProperty(item, 'Status')}" data-quest-id="${GetObjectProperty(item, 'QueueGiveQuestId')}">
                                                ${GetObjectProperty(item, 'Name')}
                                            </div>
                                            <div class="status">${status}</div>
                                            <div class="action">${button}</div>
                                        </div>`);
                }
            }

        }
        const closeModal = function () {
            $('#modal').css('display', 'none');
        }
        const OpenBankInfo = async function (itemUser) {
            $('#updateBank-btn').attr('onclick', 'creatBankAccount()');
            $('#modal').css('display', 'flex');
            await ResetDataPayment();
            const idUser = $(itemUser).data('userid');
            const queueGiveQuestId = $(itemUser).data('id');
            const rq = await fetch('/api/UserBankInfo/GetListUserBankInfoByUserId?userId=' + idUser + '&queueGiveQuestId=' + queueGiveQuestId, {
                method: 'get',
                headers: Enum.OptionHeaderDefault
            });
            const rs = await rq.json();
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {

                $('#total-pay').html(`${NumberFormat(GetObjectProperty(rs.data.queueGiveQuest,'AmountGive'))}<sup> vnđ</sup>`);
                $('#content-pay').html('KS ' + GetObjectProperty(rs.data, 'Code'));
                for (let index = 0; index < rs.data.listUserBank.length; index++) {
                    let itemBank = rs.data.listUserBank[index];
                    $('#list-userbank').append(`
                        <div class="item-userbank">
                        <div class="bank-name">
                            <div class="header">
                                Ngân hàng:
                            </div>
                            <div class="text-value">
                                ${GetObjectProperty(itemBank, 'BankName')}
                            </div>
                        </div>
                        <div class="bank-ownername">
                            <div class="header">
                                Chủ tài khoản:
                            </div>
                            <div class="text-value">
                                ${GetObjectProperty(itemBank, 'BankOwnerName')}
                            </div>
                        </div>
                        <div class="bank-number">
                            <div class="header">
                                Số tài khoản:
                            </div>
                            <div class="text-value">
                                ${GetObjectProperty(itemBank, 'BankNumber')}
                            </div>
                        </div>
                        <div class="QR-Image">
                            <div class="header">
                                Mã QR:
                            </div>
                            <div class="text-value">
                                <div class="image">

                                </div>
                            </div>
                        </div>
                    </div>
                   `);
                }
            } else {
                alert(rs.message);
            }
        }
        const ResetDataPayment = async function () {
            $('#total-pay').html('');
            $('#content-pay').html('');
            $('#list-userbank').html('');
        }


        GetListGive();
        InitPage();
    </script>
}