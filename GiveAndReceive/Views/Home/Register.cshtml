
@{
    Layout = "/Views/Shared/_LayoutAuth.cshtml";
    ViewBag.Title = "Register";
}
<style>
    a {
        cursor: pointer;
    }

    .logo {
        margin-bottom: 20px !important;
    }

        .logo img {
            width: 100%;
            height: auto !important;
        }

    .form-register {
        background-color: white;
        display: flex;
        flex-direction: column;
        padding: 0 25px 25px;
    }

        .form-register .step {
            flex-direction: column;
        }


        .form-register .form-body {
            padding: 30px 0;
        }

        .form-register .register-input-group {
            padding-bottom: 10px;
        }

            .form-register .register-input-group .input-label {
                padding-bottom: 5px;
                font-weight: bold;
            }

            .form-register .register-input-group .input-control {
            }

        .form-register .form-footer {
            display: flex;
        }

            .form-register .form-footer .action {
                display: flex;
                justify-content: space-between;
                flex: 1;
            }

                .form-register .form-footer .action > div {
                }
</style>

<input type="hidden" id="ParentCode" value="@ViewBag.ShareCode" />
<h1 class="auth-title">Đăng Ký</h1>
<p class="auth-subtitle mb-5">Nhập thông tin của bạn để đăng ký tài khoản vào hệ thống.</p>
<div>
    <div class="row h-100">
        <div class="col-lg-5 col-12">
            <div class="form-register">
                <div class="step step-1" style="display:flex">
                    <div class="form-group position-relative has-icon-left mb-4 mt-5">
                        <input type="tel" class="form-control form-control-xl" id="phone" placeholder="Nhập số điện thoại" onkeyup="ValidateInputOnlyPhoneNumber(event, this);">
                        <div class="form-control-icon">
                            <i class="bi bi-person"></i>
                        </div>
                    </div>

                    <button class="btn btn-primary btn-block btn-lg shadow-lg" onclick="SendOTP(this);">Gửi mã OTP</button>
                    <div class="text-center mt-5">
                        <p class="text-gray-600">
                            Bạn đã có tài khoản?
                            <a href="/dang-nhap" class="font-bold">
                                Đăng nhập
                            </a>
                        </p>

                    </div>
                </div>
                <div class="step step-2" style="display:none;">
                    <div class="form-body">
                        <div class="register-input-group">
                            <div class="input-label">Hệ thống đã gửi mã OTP vào số điện thoại bạn vừa nhập</div>
                            <div class="input-control">
                                <input id="otp" type="tel" class="form-control form-control-xl" placeholder="Nhập mã xác nhận" onkeyup="ValidateInputOnlyPhoneNumber(event, this);" />
                            </div>
                        </div>
                    </div>
                    <div class="form-footer">
                        <div class="action">
                            <div>
                                <a class="btn btn-secondary" onclick="GoToStep(1);">Quay lại</a>
                            </div>
                            <div>
                                <a class="btn btn-primary" onclick="VerifyCode();">Xác nhận</a>
                            </div>
                        </div>
                    </div>
                </div>
                <div class="step step-3" style="display:none;">
                    <div class="form-body">

                        <div class="register-input-group">
                            <div class="input-label">Họ tên (*)</div>
                            <div class="input-control">
                                <input id="Name" type="text" class="form-control form-control-xl" placeholder="Nhập họ và tên của bạn" />
                            </div>
                        </div>

                        <div class="register-input-group">
                            <div class="input-label">Mật khẩu (*)</div>
                            <div class="input-control">
                                <input id="Password" type="password" class="form-control form-control-xl" placeholder="Nhập mật khẩu" />
                            </div>
                        </div>

                        <div class="register-input-group">
                            <div class="input-label">Xác nhận mật khẩu</div>
                            <div class="input-control">
                                <input id="ConfirmPassword" type="password" class="form-control form-control-xl" placeholder="Xác nhận mật khẩu" />
                            </div>
                        </div>


                    </div>
                    <div class="form-footer">
                        <div class="action">
                            <div>
                                <a class="btn btn-primary" onclick="Register(this);">Đăng ký</a>
                            </div>
                        </div>
                    </div>
                </div>

            </div>
        </div>
        <div class="col-lg-7 d-none d-lg-block">
            <div id="auth-right">
                <div class="logo-desktop">
                    <a href="/"><img src="/Content/img/utao-5.png" alt="Logo"></a>
                </div>
            </div>
        </div>
    </div>
</div>

@section scripts{
    <script>
        const SendOTP = async function (el) {
            $(el).addClass('is-loading');
            let phone = $('#phone').val();

            if (phone === '' || phone === null || typeof phone === 'undefined') {
                Swal.fire({
                    icon: "error",
                    title: "Số điện thoại không được để trống",
                })
                return;
            }

            if (phone.length !== 10 && phone[0] !== '') {
                Swal.fire({
                    icon: "error",
                    title: "Số điện thoại không đúng định dạng",
                })
                return;
            }

            phone = '%2B84%20' + phone.substr(1, 9);
            let rq = await fetch('/api/user/GetVerifyCode?phone=' + phone, {
                method: 'get',
                headers: {
                    "Content-Type": "application/json",
                }
            });
            let rs = await rq.json();
            $(el).removeClass('is-loading');
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                GoToStep(2);
            }
        }
        const GoToStep = function (step) {
            $('.step').css('display', 'none');
            $('.step-' + step).css('display', 'flex');
        }
        const VerifyCode = async function () {
            let otp = $('#otp').val();
            let phone = $('#phone').val();
            phone = '%2B84%20' + phone.substr(1, 9);
            if (otp === '' || otp === null || typeof otp === 'undefined') {
                Swal.fire({
                    icon: "error",
                    title: "Mã xác nhận không được để trống",
                })
                return;
            }

            if (phone === '' || phone === null || typeof phone === 'undefined') {
                Swal.fire({
                    icon: "error",
                    title: "Số điện thoại không được để trống",
                })
                return;
            }
            let rq = await fetch('/api/user/ConfirmCode?phone=' + phone + '&code=' + otp, {
                method: 'get',
                headers: {
                    "Content-Type": "application/json",
                }
            });
            let rs = await rq.json();
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                GoToStep(3);
            }
        }
        const Register = async function (el) {
            let model = {
                Phone: $('#phone').val(),
                Name: $('#Name').val(),
                Password: $('#Password').val(),
                NameSearch: '',
                ParentCode: $('#ParentCode').val()
            }

            let confirmPassword = $('#ConfirmPassword').val();

            if (GetObjectProperty(model, 'Phone') === '') {
                Swal.fire({
                    icon: "error",
                    title: "Số điện thoại không được để trống",
                })
                return;
            }
            if (GetObjectProperty(model, 'Name') === '') {
                Swal.fire({
                    icon: "error",
                    title: "Họ tên không được để trống",
                })
                return;
            }
            if (GetObjectProperty(model, 'Password') === '') {
                Swal.fire({
                    icon: "error",
                    title: "Mật khẩu không được để trống",
                })
                return;
            }
            if (confirmPassword === '') {
                Swal.fire({
                    icon: "error",
                    title: "Xác nhận mật khẩu không được để trống",
                })
                return;
            }
            if (confirmPassword !== GetObjectProperty(model, 'Password')) {
                Swal.fire({
                    icon: "error",
                    title: "Xác nhận mật khẩu không khớp",
                })
                return;
            }

            model.NameSearch = RemoveVietnameseTones(model.Name);
            model.Phone = '+84 ' + model.Phone.substr(1, 9);
            model.Password = MD5(base64.encode(model.Password));

            $(el).addClass('is-loading');
            let rq = await fetch('/api/user/Register', {
                method: 'post',
                headers: {
                    'Content-Type': 'application/json'
                },
                body: JSON.stringify(model)
            });

            let rs = await rq.json();
            $(el).removeClass('is-loading');
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                Swal.fire({
                    icon: "success",
                    title: "Đăng ký tài khoản thành công",
                    preConfirm: function () { window.location.href = '/dang-nhap'; },
                })

            }

        }
    </script>
}