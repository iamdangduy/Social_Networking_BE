
@{
    Layout = "/Views/Shared/_LayoutAuth.cshtml";
    ViewBag.Title = "ForgotPassword";
}

<h1 class="auth-title">Quên mật khẩu</h1>
<p class="auth-subtitle mb-5">Nhập số điện thoại của bạn để nhận mã bảo mật từ hệ thống.</p>

<div class="step step-1" style="display:block">
    <div>
        <div class="form-group position-relative has-icon-left mb-4">
            <input id="phone" type="tel" class="form-control form-control-xl" placeholder="Số điện thoại" onkeyup="ValidateInputOnlyPhoneNumber(event, this);">
            <div class="form-control-icon">
            </div>
        </div>
        <button class="btn btn-primary btn-block btn-lg shadow-lg mt-5" onclick="SendOTP(this);">Gửi</button>
    </div>
    <div class="text-center mt-5 text-lg fs-6">
        <p class='text-gray-500'>
            Vẫn nhớ tài khoản? <a href="/dang-nhap" class="font-bold">Đăng nhập</a>.
        </p>
    </div>
</div>
<div class="step step-2" style="display:none;flex-direction:column;">
    <div class="form-body">
        <div class="register-input-group">
            <div class="input-label">Hệ thống đã gửi mã OTP vào số điện thoại bạn vừa nhập</div>
            <div class="input-control">
                <input id="otp" type="tel" class="form-control form-control-xl" placeholder="Nhập mã xác nhận" onkeyup="ValidateInputOnlyPhoneNumber(event, this);" />
            </div>
        </div>
    </div>
    <div class="form-footer">
        <div class="action" style=" display: flex; gap: 10px; padding: 10px 0; justify-content: flex-end;">
            <div>
                <a class="btn btn-secondary" onclick="GoToStep(1);">Quay lại</a>
            </div>
            <div>
                <a class="btn btn-primary" onclick="VerifyCode();">Xác nhận</a>
            </div>
        </div>
    </div>
</div>
<div class="step step-3" style="display:none;flex-direction:column">
    <div class="form-body">

        <div class="register-input-group">
            <div class="input-label">Mật khẩu (*)</div>
            <div class="input-control">
                <input id="Password" type="password" class="form-control form-control-xl" placeholder="Nhập mật khẩu" />
            </div>
        </div>

        <div class="register-input-group">
            <div class="input-label">Xác nhận mật khẩu</div>
            <div class="input-control">
                <input id="ConfirmPassword" type="password" class="form-control form-control-xl" placeholder="Xác nhận mật khẩu" />
            </div>
        </div>


    </div>
    <div class="form-footer">
        <div class="action" style=" display: flex; gap: 10px; padding: 10px 0; justify-content: flex-end;">
            <div>
                <a class="btn btn-primary" onclick="Recover();">Xác nhận</a>
            </div>
        </div>
    </div>
</div>


@section scripts{
    <script>
        const SendOTP = async function (el) {
            $(el).addClass('is-loading');
            let phone = $('#phone').val();

            if (phone === '' || phone === null || typeof phone === 'undefined') {
                Swal.fire({
                    icon: "error",
                    title: "Số điện thoại không được để trống",
                })
                return;
            }

            if (phone.length !== 10 && phone[0] !== '') {
                Swal.fire({
                    icon: "error",
                    title: "Số điện thoại không đúng định dạng",
                })
                return;
            }

            phone = '%2B84%20' + phone.substr(1, 9);
            let rq = await fetch('/api/user/GetOTPCode?phone=' + phone, {
                method: 'get',
                headers: {
                    "Content-Type": "application/json",
                }
            });
            let rs = await rq.json();
            $(el).removeClass('is-loading');
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                $('.step').css('display', 'none');
                $('.step-2').css('display', 'flex');
            }
        }

        const GoToStep = function (step) {
            $('.step').css('display', 'none');
            $('.step-' + step).css('display', 'flex');
        }

        const VerifyCode = async function () {
            let otp = $('#otp').val();
            let phone = $('#phone').val();
            phone = '%2B84%20' + phone.substr(1, 9);
            if (otp === '' || otp === null || typeof otp === 'undefined') {
                Swal.fire({
                    icon: "error",
                    title: "Mã xác nhận không được để trống",
                })
                return;
            }

            if (phone === '' || phone === null || typeof phone === 'undefined') {
                Swal.fire({
                    icon: "error",
                    title: "Số điện thoại không được để trống",
                })
                return;
            }
            let rq = await fetch('/api/user/CheckOTPCode?phone=' + phone + '&code=' + otp, {
                method: 'get',
                headers: {
                    "Content-Type": "application/json",
                }
            });
            let rs = await rq.json();
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                GoToStep(3);
            }
        }

        const Recover = async function () {
            let model = {
                Phone: $('#phone').val(),
                newPassword: $('#Password').val(),
                code: $('#otp').val()
            }

            let confirmPassword = $('#ConfirmPassword').val();

            if (GetObjectProperty(model, 'Phone') === '') {
                Swal.fire({
                    icon: "error",
                    title: "Số điện thoại không được để trống",
                })
                return;
            }

            if (GetObjectProperty(model, 'newPassword') === '') {
                Swal.fire({
                    icon: "error",
                    title: "Mật khẩu không được để trống",
                })
                return;
            }
            if (confirmPassword === '') {
                Swal.fire({
                    icon: "error",
                    title: "Xác nhận mật khẩu không được để trống",
                })
                return;
            }
            if (confirmPassword !== GetObjectProperty(model, 'newPassword')) {
                Swal.fire({
                    icon: "error",
                    title: "Xác nhận mật khẩu không khớp",
                })
                return;
            }


            model.Phone = '%2B84%20' + model.Phone.substr(1, 9);
            model.newPassword = MD5(base64.encode(model.newPassword));

            let rq = await fetch('/api/user/ForgotPassword?phone=' + model.Phone + '&code=' + model.code + '&newPassword=' + model.newPassword, {
                method: 'get',
                headers: {
                    'Content-Type': 'application/json'
                },

            });

            let rs = await rq.json();
            if (CheckErrorResponse(rs) === false) return;
            if (GetObjectProperty(rs, 'status') === Enum.ResponseStatus.SUCCESS) {
                Swal.fire({
                    icon: "success",
                    title: "Cài đặt lại mật khẩu thành công",
                    preConfirm: function () { window.location.href = '/dang-nhap'; },
                })
            }

        }
    </script>
}